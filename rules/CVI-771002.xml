<?xml version="1.0" encoding="UTF-8"?>

<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="SpEL注入RCE"/>
    <language value="java"/>
    <match mode="regex-only-match"><![CDATA[\.getValue\(|\.setValue\(]]></match>
    <match2 block="in-file-up"><![CDATA[(org\.springframework\.expression\.spel\.standard\.SpelExpressionParser)]]></match2>
    <match2 block="in-file-up"><![CDATA[(org\.springframework\.expression\.ExpressionParser)]]></match2>
    <match2 block="in-file-up"><![CDATA[(org\.springframework\.expression\.common\.TemplateAwareExpressionParser)]]></match2>
    
    <level value="8"/>
    <solution><![CDATA[
        ## 安全风险
        SpEL注入RCE

        ### 形成原理
        接收了用户提供的SpEL表达式并执行。

        ### 风险
        参考：https://github.com/JoyChou93/java-sec-code/blob/master/src/main/java/org/joychou/controller/SpEL.java
        https://github.com/find-sec-bugs/find-sec-bugs/blob/master/findsecbugs-plugin/src/main/resources/injection-sinks/spel.txt
]]>
    </solution>
    <test>
        <case assert="true"><![CDATA[
import org.springframework.expression.spel.standard.SpelExpressionParser;

    @RequestMapping("/spel/vul")
    private static String rce(String expression) {
        ExpressionParser parser = new SpelExpressionParser();
        // fix method: SimpleEvaluationContext
        String result = parser.parseExpression(expression).getValue().toString();
        //使用setValue或getValue时触发代码执行。参考：https://p0rz9.github.io/2019/05/28/SpEL%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B3%A8%E5%85%A5/
        return result;
    }
        ]]></case>
    </test>
    <status value="on"/>
    <author name="77" email="77caikiki@gmail.com"/>
</cobra>
