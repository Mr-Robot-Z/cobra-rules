<?xml version="1.0" encoding="UTF-8"?>

<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="XStream反序列化RCE"/>
    <language value="java"/>
    <match mode="regex-only-match"><![CDATA[\.fromXML\(]]></match>
    <match2 block="in-file-up"><![CDATA[(com\.thoughtworks\.xstream\.XStream)]]></match2>
    <level value="8"/>
    <solution><![CDATA[
        ## 安全风险
        URL跳转漏洞

        ### 形成原理
        信任了用户输入的URL，而最终响应30x跳转

        ### 风险
        在1.4.x系列版本中，<=1.4.6或=1.4.10是存在反序列化漏洞的。
        参考：
        https://www.mi1k7ea.com/2019/10/21/XStream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/
        ### 修复方法
        如果可以明确反序列化对象的类名，则可在反序列化时设置允许被反序列化类的白名单（推荐）。
        使用Xstream的denyPermission方法可以实现黑名单控制，但不推荐使用该方法。
        参考：https://github.com/Cryin/Paper/blob/master/Xstream%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88.md
]]>
    </solution>
    <test>
        <case assert="true"><![CDATA[
import javax.servlet.http.HttpServletRequest;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;

    @PostMapping("/xstream")
    public String parseXml(HttpServletRequest request) throws Exception{
        String xml = WebUtils.getRequestBody(request);
        XStream xstream = new XStream(new DomDriver());

        //User user = new User();
        //user.setId(0);
        //user.setUsername("admin");

        //String xml = xstream.toXML(user);                 // 序列化

        User user = (User)xstream.fromXML(xml);             // 反序列化
        return "xstream";
    }
        ]]></case>
    </test>
    <status value="on"/>
    <author name="77" email="feei@feei.cn"/>
</cobra>
