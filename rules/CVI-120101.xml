<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="URLConnection/HttpURLConnection的SSRF"/>
    <language value="java"/>
    <match mode="regex-only-match"><![CDATA[\.getInputStream\(|\.getLastModified\(|\.getContentType\(]]></match> <!-- 先判断new URL的参数可控-->
    <match2 block="in-file-up"><![CDATA[(java\.net\.URLConnection|java\.net\.HttpURLConnection|sun\.net\.www\.protocol\.http\.HttpURLConnection)]]></match2>
    <level value="6"/>
    <test>
        <case assert="true"><![CDATA[
            String url = request.getParameter("url");
            URL u = new URL(url);
            URLConnection urlConnection = u.openConnection();
            urlConnection.connect();                         // 发起DNS请求  # 容易误报，暂时删除
        ]]></case>

        <case assert="true"><![CDATA[
            String url = request.getParameter("url");
            URLConnection urlConnection =  new URL(url).openConnection();
            urlConnection.getInputStream();                  // 发起HTTP请求
        ]]></case>
        <case assert="true"><![CDATA[
            String url = request.getParameter("url");
            URLConnection urlConnection =  new URL(url).openConnection();
            urlConnection.getLastModified();                  // 发起HTTP请求
        ]]></case>
        <case assert="true"><![CDATA[
            String url = request.getParameter("url");
            URLConnection urlConnection =  (java.net.HttpURLConnection)new URL(url).openConnection();
            urlConnection.getContentType();                  // 发起HTTP请求
        ]]></case>
        <case assert="true"><![CDATA[
            String url = request.getParameter("url");
            URLConnection urlConnection =  (sun.net.www.protocol.http.HttpURLConnection)new URL(url).openConnection();
            urlConnection.getContentType();                  // 发起HTTP请求
        ]]></case>


        <case assert="false"><![CDATA[
            String url = request.getParameter("url");
            URL u = new URL(url);
            URLConnection urlConnection = u.openConnection();
        ]]></case>
    </test>
    <solution>
        ## 安全风险
        SSRF漏洞(Server-Side Request Forgery)

        ## 形成原理
        SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。
        
        ## 解决方案
        使用java.io.URI#getHost,getPort,getScheme对提供的url进行判断，符合白名单才允许发起请求。
        参考：https://find-sec-bugs.github.io/bugs.htm#URLCONNECTION_SSRF_FD
    </solution>
    <status value="on"/>
    <author name="77" email="77caikiki@gmail.com"/>
</cobra>
