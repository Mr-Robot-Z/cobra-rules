<?xml version="1.0" encoding="UTF-8"?>

<cobra document="https://github.com/WhaleShark-Team/cobra">
    <name value="各种XXE"/>
    <language value="java"/>
    <match mode="regex-only-match"><![CDATA[(\.createXMLStreamReader\(|\.evaluate\(|\.parse\(|\.transform\()]]></match>
    <match2 block="in-file-up"><![CDATA[(org\.jdom2\?\.input\.SAXBuilder)]]></match2>
    <match2 block="in-file-up"><![CDATA[(org\.dom4j\.io\.SAXReader)]]></match2>
    <match2 block="in-file-up"><![CDATA[(org\.xml\.sax\.XMLReader)]]></match2>
    <match2 block="in-file-up"><![CDATA[(org\.xml\.sax\.helpers\.XMLReaderFactory)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.stream\.XMLStreamReader)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.parsers\.DocumentBuilder)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.parsers\.SAXParser)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.transform\.sax\.SAXSource)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.transform\.TransformerFactory)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.transform\.sax\.SAXTransformerFactory)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.validation\.SchemaFactory)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.bind\.Unmarshaller)]]></match2>
    <match2 block="in-file-up"><![CDATA[(javax\.xml\.xpath\.XPathExpression)]]></match2>
    
    <level value="8"/>
    <solution><![CDATA[
        ## 安全风险
        XXE漏洞

        ### 形成原理
        很多Java库默认情况下没有禁用外部实体，当使用这些库解析XML时，会导致XXE。

        ### 风险
        参考：https://cryin.github.io/blog/JAVA-Static-Code-Audit-and-Analysis/

        ### 修复方案
        使用XML解析器时需要设置其属性，禁止使用外部实体，以SAXReader为例，安全的使用方式如下:
        sax.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
        sax.setFeature("http://xml.org/sax/features/external-general-entities", false);
        sax.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
]]>
    </solution>
    <test>
            <case assert="true"><![CDATA[
import com.monitorjbl.xlsx.StreamingReader;
import org.apache.poi.ss.usermodel.Workbook;

    @PostMapping("/readxlsx")
    public void xllx_streamer_xxe(MultipartFile file)throws IOException {
        Workbook wb = StreamingReader.builder().open(file.getInputStream());
    }
    ]]></case>


            <case assert="true"><![CDATA[
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

XSSFWorkbook wb = new XSSFWorkbook(file.getInputStream());
    ]]></case>
    </test>

                <case assert="true"><![CDATA[
import org.xml.sax.helpers.XMLReaderFactory;

            XMLReader xmlReader = XMLReaderFactory.createXMLReader();
            xmlReader.parse(new InputSource(new StringReader(body)));  // parse xml
    ]]></case>
    </test>

    <status value="on"/>
    <author name="77" email="77caikiki@gmail.com"/>
</cobra>
